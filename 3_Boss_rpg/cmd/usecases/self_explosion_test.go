package usecases

import (
	"fmt"
	"os"

	"rpg/internal/domain/game"
)

func ExampleSelfExplosion() {
	input := `#軍隊-1-開始
英雄 999999 500 30 自爆
A 100 1000 15
B 100 1000 15
C 100 1000 15
D 100 1000 15
E 100 1000 15
F 100 1000 15
G 100 1000 15
H 100 1000 15
I 100 1000 15
#軍隊-1-結束
#軍隊-2-開始
A 100 1000 15
B 100 1000 15
C 100 1000 15
D 100 1000 15
E 100 1000 15
F 100 1000 15
G 100 1000 15
H 100 1000 15
I 100 1000 15
#軍隊-2-結束
1
`

	r, w, _ := os.Pipe()
	os.Stdin = r
	_, _ = fmt.Fprint(w, input)
	_ = w.Close()

	game.StartRPG()

	// Output:
	//輪到 [1]英雄 (HP: 999999, MP: 500, STR: 30, State: 正常)。
	//選擇行動：(0) 普通攻擊 (1) 自爆
	//[1]英雄 對 [1]A, [1]B, [1]C, [1]D, [1]E, [1]F, [1]G, [1]H, [1]I, [2]A, [2]B, [2]C, [2]D, [2]E, [2]F, [2]G, [2]H, [2]I 使用了 自爆。
	//[1]英雄 對 [1]A 造成 150 點傷害。
	//[1]A 死亡。
	//[1]英雄 對 [1]B 造成 150 點傷害。
	//[1]B 死亡。
	//[1]英雄 對 [1]C 造成 150 點傷害。
	//[1]C 死亡。
	//[1]英雄 對 [1]D 造成 150 點傷害。
	//[1]D 死亡。
	//[1]英雄 對 [1]E 造成 150 點傷害。
	//[1]E 死亡。
	//[1]英雄 對 [1]F 造成 150 點傷害。
	//[1]F 死亡。
	//[1]英雄 對 [1]G 造成 150 點傷害。
	//[1]G 死亡。
	//[1]英雄 對 [1]H 造成 150 點傷害。
	//[1]H 死亡。
	//[1]英雄 對 [1]I 造成 150 點傷害。
	//[1]I 死亡。
	//[1]英雄 對 [2]A 造成 150 點傷害。
	//[2]A 死亡。
	//[1]英雄 對 [2]B 造成 150 點傷害。
	//[2]B 死亡。
	//[1]英雄 對 [2]C 造成 150 點傷害。
	//[2]C 死亡。
	//[1]英雄 對 [2]D 造成 150 點傷害。
	//[2]D 死亡。
	//[1]英雄 對 [2]E 造成 150 點傷害。
	//[2]E 死亡。
	//[1]英雄 對 [2]F 造成 150 點傷害。
	//[2]F 死亡。
	//[1]英雄 對 [2]G 造成 150 點傷害。
	//[2]G 死亡。
	//[1]英雄 對 [2]H 造成 150 點傷害。
	//[2]H 死亡。
	//[1]英雄 對 [2]I 造成 150 點傷害。
	//[2]I 死亡。
	//[1]英雄 死亡。
	//你失敗了！

}
