// Code generated by mockery v2.20.0. DO NOT EDIT.

package domain

import mock "github.com/stretchr/testify/mock"

// MockSkill is an autogenerated mock type for the Skill type
type MockSkill struct {
	mock.Mock
}

// Execute provides a mock function with given fields: r
func (_m *MockSkill) Execute(r Role) {
	_m.Called(r)
}

// GetMp provides a mock function with given fields:
func (_m *MockSkill) GetMp() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *MockSkill) GetName() SkillName {
	ret := _m.Called()

	var r0 SkillName
	if rf, ok := ret.Get(0).(func() SkillName); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(SkillName)
	}

	return r0
}

type mockConstructorTestingTNewMockSkill interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockSkill creates a new instance of MockSkill. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockSkill(t mockConstructorTestingTNewMockSkill) *MockSkill {
	mock := &MockSkill{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
