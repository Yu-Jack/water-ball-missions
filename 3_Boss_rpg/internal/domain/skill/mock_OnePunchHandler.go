// Code generated by mockery v2.20.0. DO NOT EDIT.

package skill

import (
	domain "rpg/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// MockOnePunchHandler is an autogenerated mock type for the OnePunchHandler type
type MockOnePunchHandler struct {
	mock.Mock
}

// execute provides a mock function with given fields: current, target
func (_m *MockOnePunchHandler) execute(current domain.Role, target domain.Role) {
	_m.Called(current, target)
}

// match provides a mock function with given fields: current, target
func (_m *MockOnePunchHandler) match(current domain.Role, target domain.Role) bool {
	ret := _m.Called(current, target)

	var r0 bool
	if rf, ok := ret.Get(0).(func(domain.Role, domain.Role) bool); ok {
		r0 = rf(current, target)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockOnePunchHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockOnePunchHandler creates a new instance of MockOnePunchHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockOnePunchHandler(t mockConstructorTestingTNewMockOnePunchHandler) *MockOnePunchHandler {
	mock := &MockOnePunchHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
