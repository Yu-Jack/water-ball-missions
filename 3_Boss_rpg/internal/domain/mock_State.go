// Code generated by mockery v2.20.0. DO NOT EDIT.

package domain

import mock "github.com/stretchr/testify/mock"

// MockState is an autogenerated mock type for the State type
type MockState struct {
	mock.Mock
}

// CountDown provides a mock function with given fields:
func (_m *MockState) CountDown() {
	_m.Called()
}

// Die provides a mock function with given fields:
func (_m *MockState) Die() {
	_m.Called()
}

// Do provides a mock function with given fields:
func (_m *MockState) Do() {
	_m.Called()
}

// Enter provides a mock function with given fields:
func (_m *MockState) Enter() {
	_m.Called()
}

// Exit provides a mock function with given fields:
func (_m *MockState) Exit() {
	_m.Called()
}

// GetName provides a mock function with given fields:
func (_m *MockState) GetName() StateName {
	ret := _m.Called()

	var r0 StateName
	if rf, ok := ret.Get(0).(func() StateName); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(StateName)
	}

	return r0
}

// SetRole provides a mock function with given fields: r
func (_m *MockState) SetRole(r Role) {
	_m.Called(r)
}

type mockConstructorTestingTNewMockState interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockState creates a new instance of MockState. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockState(t mockConstructorTestingTNewMockState) *MockState {
	mock := &MockState{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
